# KeyCloak Operator image build
parameters:
- name: SourceImageName
  type: string
  default: 'outsystems-keycloak-operator'
- name: SourceImageTag
  type: string
  default: '$(Build.BuildNumber)'

variables:
  - group: 'KeyCloak'
  - name: DOCKER_BUILDKIT #This is needed for multistage Dockerfile, in order that we have 1 final image created. Also needed in case the Dockerfile is more 'conditional'
    value: 1
  - name: AWSCredentials
    value: 'AWS big-crunch'
  - name: ServiceConnection
    value: 'SDLC EdenStage'
  - name: agent
    value: 'cdagent'
  - name: emailAgent
    value: 'rd.productivity.team@outsystems.com'
  - name: ImagePref
    value: 'docker.pkg.github.com/outsystems/outsystems.identity.keycloak'

trigger: none

pr: none

stages:
  ####################
  # Stage for Verify
  ###################
  - stage: MainStage
    displayName: Main Stage
    jobs:

      - job: JobBuild
        displayName: Build Image
        pool:
          vmimage: 'ubuntu-20.04'
        steps:
          ###################
          # Docker Login
          ###################
          - script: docker login -u ${Agent} -p ${pass} docker.pkg.github.com
            displayName: '🐳 Docker login' 
            env:
                Agent: ${{variables.agent}}
                pass: $(GitHub_PAT)
          ###################
          # Build Docker Image
          ###################
          - task: Docker@2
            displayName: '📦 Build Docker Image'
            inputs:
              command: 'build'
              containerRegistry: ${{variables.ServiceConnection}}
              repository: ${{ parameters.SourceImageName }}
              tags: |
                ${{ parameters.SourceImageTag }}
              arguments: >
                -t ${{variables.ImagePref}}/${{ parameters.SourceImageName }}:${{parameters.SourceImageTag}}

          - script: docker push ${{ parameters.SourceImageName }}:${{parameters.SourceImageTag}}
            displayName: Pushing Docker image to GitHub Package Repository
            ####################
            # Check generated docker images
            ###################
          - task: CmdLine@2
            displayName: '👀 Docker Images view'
            inputs:
              script: |
                docker images -a
            ####################
            # Push image to Github Package Registry
            ###################
          - script: docker push docker.pkg.github.com/outsystems/outsystems.identity.keycloak/${{parameters.SourceImageName}}:${{parameters.SourceImageTag}}
            displayName: 📤 Push Image to Github Package Registry
#            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            ####################
            # Push image to ECR
            ###################
          - task: ECRPushImage@1
            displayName: '📤 Push Image to ECR'
            inputs:
              awsCredentials: '${{variables.AwsCredentials}}'
              regionName: 'eu-west-1'
              imageSource: 'imagename'
              sourceImageName: '${{variables.ImagePref}}/${{parameters.SourceImageName}}'
              sourceImageTag: '${{parameters.SourceImageTag}}'
              repositoryName: '${{variables.ImagePref}}/${{parameters.SourceImageName}}'
              pushTag: '${{parameters.SourceImageTag}}'
              autoCreateRepository: true
            ####################
            # Push image to ACR
            ###################
          - task: Docker@2
            displayName: 📤 Push Image to ACR
            inputs:
              command: push
              containerRegistry: ${{variables.ServiceConnection}}
              repository: '${{parameters.SourceImageName}}'
              tags: |
                ${{ parameters.SourceImageTag }}